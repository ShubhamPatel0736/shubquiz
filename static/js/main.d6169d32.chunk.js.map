{"version":3,"sources":["components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["React","Component","App","questions","questionsText","answerOptions","answerText","isCorrect","useState","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","className","length","map","answerOption","onClick","nextQuestion","handleAnswerOptionClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAGmBA,IAAMC,U,MCoGVC,MAnGf,WACE,IAAMC,EAAU,CACd,CACEC,cAAc,+BACdC,cAAc,CACZ,CAACC,WAAW,oBAAoBC,WAAU,GAC1C,CAACD,WAAW,eAAeC,WAAU,GACrC,CAACD,WAAW,gBAAgBC,WAAU,GACtC,CAACD,WAAW,cAAcC,WAAU,KAIxC,CACEH,cAAc,wBACdC,cAAc,CACZ,CAACC,WAAW,eAAeC,WAAU,GACrC,CAACD,WAAW,WAAWC,WAAU,GACjC,CAACD,WAAW,aAAaC,WAAU,GACnC,CAACD,WAAW,uBAAuBC,WAAU,KAIjD,CACEH,cAAc,cACdC,cAAc,CACZ,CAACC,WAAW,QAAQC,WAAU,GAC9B,CAACD,WAAW,SAASC,WAAU,GAC/B,CAACD,WAAW,SAASC,WAAU,GAC/B,CAACD,WAAW,WAAWC,WAAU,KAIrC,CACEH,cAAc,sCACdC,cAAc,CACZ,CAACC,WAAW,cAAcC,WAAU,GACpC,CAACD,WAAW,UAAUC,WAAU,GAChC,CAACD,WAAW,YAAYC,WAAU,GAClC,CAACD,WAAW,mBAAmBC,WAAU,KAI7C,CACEH,cAAc,gCACdC,cAAc,CACZ,CAACC,WAAW,MAAMC,WAAU,GAC5B,CAACD,WAAW,QAAQC,WAAU,GAC9B,CAACD,WAAW,QAAQC,WAAU,GAC9B,CAACD,WAAW,QAAQC,WAAU,MAhDvB,EAqD8BC,mBAAS,GArDvC,mBAqDNC,EArDM,KAqDUC,EArDV,OAsDkBF,oBAAS,GAtD3B,mBAsDNG,EAtDM,KAsDIC,EAtDJ,OAuDSJ,mBAAS,GAvDlB,mBAuDPK,EAvDO,KAuDDC,EAvDC,KAqEb,OAEE,qBAAKC,UAAU,MAAf,SAEDJ,EACC,sBAAKI,UAAU,gBAAf,wBACcF,EADd,WAC6BV,EAAUa,UAIvC,sBAAKD,UAAU,mBAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,6CAAgBN,EAAgB,EAAhC,IAAoCN,EAAUa,YAE9C,qBAAKD,UAAU,gBAAf,SAAgCZ,EAAUM,GAAiBL,gBAC3D,qBAAKW,UAAU,iBAAf,SACGZ,EAAUM,GAAiBJ,cAAcY,KAAI,SAACC,GAAD,OAC5C,wBAAQC,QAAS,kBA9BC,SAACZ,GAC1BA,GACDO,EAASD,EAAM,GAEjB,IAAMO,EAAaX,EAAgB,EAChCW,EAAajB,EAAUa,OAExBN,EAAmBU,GAGnBR,GAAa,GAoBgBS,CAAwBH,EAAaX,YAA1D,SAAuEW,EAAaZ,wBC9EjFgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d6169d32.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\n\r\nclass Home extends React.Component\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n    }\r\n    render()\r\n    {\r\n\r\n        return(\r\n            <div className='homediv'>\r\n                <h2 id='htag'>React Quiz</h2>\r\n                <button className='playbtn'>Play</button><br/><br/>\r\n                <button id='loginbtn'>Login</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <button id='signupbtn'>Sign up</button>\r\n                </div>\r\n        )\r\n    }\r\n}\r\nexport default Home;","import Home from './components/Home';\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n  const questions=[\n    {\n      questionsText:'Who is your favourite Actor?',\n      answerOptions:[\n        {answerText:'Leonardo D Caprio',isCorrect:false},\n        {answerText:'Henry Cavill',isCorrect:false},\n        {answerText:'Ryan Reynolds',isCorrect:true},\n        {answerText:'Chris Evans',isCorrect:false},\n\n      ],\n    },\n    {\n      questionsText:'Your favourite Movie?',\n      answerOptions:[\n        {answerText:'Intersteller',isCorrect:false},\n        {answerText:'Twilight',isCorrect:true},\n        {answerText:'Wrong Turn',isCorrect:false},\n        {answerText:'Shawshank Redemption',isCorrect:false},\n\n      ],\n    },\n    {\n      questionsText:'Choose One?',\n      answerOptions:[\n        {answerText:'Music',isCorrect:true},\n        {answerText:'Sports',isCorrect:false},\n        {answerText:'Movies',isCorrect:false},\n        {answerText:'Painting',isCorrect:false},\n\n      ],\n    },\n    {\n      questionsText:'Who is your fav character from GOT?',\n      answerOptions:[\n        {answerText:'Sansa Stark',isCorrect:false},\n        {answerText:'Joffery',isCorrect:false},\n        {answerText:'John Snow',isCorrect:false},\n        {answerText:'Tyrion Lannister',isCorrect:true},\n\n      ],\n    },\n    {\n      questionsText:'What is your favourite color?',\n      answerOptions:[\n        {answerText:'Red',isCorrect:false},\n        {answerText:'Black',isCorrect:true},\n        {answerText:'Green',isCorrect:false},\n        {answerText:'Yello',isCorrect:false},\n\n      ],\n    },\n  ];\n  const [currentQuestion,setCurrentQuestion]=useState(0);\n  const [showScore,setShowScore]=useState(false);\n  const[score,setScore]=useState(0);\nconst handleAnswerOptionClick=(isCorrect)=>{\n  if(isCorrect){\n    setScore(score+1);\n  }\n  const nextQuestion=currentQuestion+1;\n  if(nextQuestion<questions.length)\n  {\n    setCurrentQuestion(nextQuestion);\n  }\n  else{\n    setShowScore(true);\n  }\n};\n  return (\n    \n    <div className=\"App\">\n      \n  {showScore?(\n    <div className='score-section'>\n      You scored {score} out of {questions.length}\n      </div>\n  ):(\n    \n    <div className='question-section'>\n      <div className='question-count'>\n        <span>Question {currentQuestion+1}/{questions.length}</span>\n        </div>\n        <div className='question-text'>{questions[currentQuestion].questionsText}</div>\n        <div className='answer-section'>\n          {questions[currentQuestion].answerOptions.map((answerOption)=>(\n            <button onClick={()=>handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n          )\n          \n          )}\n    \n    </div>\n    </div>\n    \n    )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}